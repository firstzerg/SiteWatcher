<Window x:Class="SiteWatcher.WatchWindow" xmlns:System="clr-namespace:System;assembly=mscorlib" 
xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase" 
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:SiteWatcher" 
mc:Ignorable="d" Title="Наблюдатель" Height="900" Width="1000" MinWidth="800" MinHeight="800" 
xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf" WindowStartupLocation="CenterScreen"
xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CloseWindowCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Icons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="White"/>
                <Setter Property="Margin" Value="10"/>
            </Style>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <local:InverseBooleanConverter x:Key="InverseBool"/>
            <local:BindingProxy x:Key="Proxy" Data="{Binding}"></local:BindingProxy>
            <local:HoursMinutesTimeSpanConverter x:Key="TimeSpanConverter"/>
            <local:ListWatchTagToStringConverter x:Key="WatchTagsToString"/>
            <ObjectDataProvider x:Key="SSTEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:SourceSelectorType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style x:Key="FontSize">
                <Setter Property="Control.FontSize" Value="14"/>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Control.FontSize" Value="16"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="ComboBox" BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="CheckBox" BasedOn="{StaticResource FontSize}"/>
            <Style TargetType="Button" BasedOn="{StaticResource FontSize}"></Style>
            <Style x:Key="RoundButton" BasedOn="{StaticResource FontSize}">
                <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="4"/>
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="ColoredButton" BasedOn="{StaticResource RoundButton}">
                <Setter Property="Border.BorderThickness" Value="0"/>
                 <Setter Property="Border.Padding" Value="5"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlueButton" BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background" Value="SteelBlue"/>
                <Setter Property="Control.Foreground" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="DarkBlue"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RedButton" BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background" Value="Crimson"/>
                <Setter Property="Control.Foreground" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="OrangeButton" BasedOn="{StaticResource ColoredButton}">
                <Setter Property="Control.Background" Value="LightCoral"/>
                <Setter Property="Control.Foreground" Value="White"/>
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver" Value="True">
                        <Setter Property="Control.Background" Value="DarkRed"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Storyboard x:Key="AnimateFlicker" RepeatBehavior="Forever">
                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="Gray" To="Red" AutoReverse="True" BeginTime="0:0:1" Duration="0:0:0.4"/>
                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="Red" To="Red" AutoReverse="True" Duration="0:0:0.4"/>
                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="Red" To="Gray" AutoReverse="True" Duration="0:0:0.4"/>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel LastChildFill="True" Margin="5 5 5 5">
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="170"/>
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Bottom" Orientation="Vertical">
                <Label>Название</Label>
                <TextBox Text="{Binding Item.Name}"/>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom" Grid.Column="1" Margin="10 0 0 0" Orientation="Vertical">
                <Label>Категории</Label>
                <ComboBox IsEditable="True" IsReadOnly="True" ItemsSource="{Binding Tags}" Text="{Binding Tags, Converter={StaticResource WatchTagsToString}, ConverterParameter=&apos;не выбрано&apos;, Mode=OneWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:WatchTag}">
                            <CheckBox Content="{Binding Name}" IsChecked="{Binding Selected}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ComboBox.ItemContainerStyle>
                </ComboBox>
            </StackPanel>
            <StackPanel VerticalAlignment="Bottom" Grid.Column="2" Margin="10 0 0 0" Orientation="Vertical">
                <Label>Проверка каждые</Label>
                <TextBox Text="{Binding Item.Interval, Converter={StaticResource TimeSpanConverter}, ConverterParameter=&apos;1m&apos;}" 
                local:TextBoxUtils.CheckRegexText="^([0-9]+[смчдsmhd]?)*$"
                />
            </StackPanel>
            <Button Grid.Column="3" Margin="10 0 0 0" Content="Сохранить" Command="{Binding SaveCommand}" Style="{StaticResource RedButton}"/>
        </Grid>
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="170"/>
            </Grid.ColumnDefinitions>
            <Label>Адрес страницы</Label>
            <TextBox x:Name="url" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Text="{Binding Item.Source.Url}" IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}">
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding UrlOpenCommand}" Key="Enter" CommandParameter="{Binding Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Row="1" Margin="0 3 3 3" HorizontalAlignment="Right" Style="{StaticResource BlueButton}" Command="{Binding UrlOpenCommand}" CommandParameter="{Binding Item.Source.Url}" IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}" Content="&gt;" Width="20" Height="20"/>
            
            <Grid Margin="10 0 0 0" Grid.Column="1" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource BlueButton}" VerticalAlignment="Stretch" ToolTip="Выбрать элемент на странице" IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}" Command="{Binding BeginSelectCommand}">
                    <TextBlock Padding="5">Выбрать элемент</TextBlock>
                </Button>
            
                <Button Grid.Column="1" Width="24" HorizontalAlignment="Right" Margin="2 0 0 0" Style="{StaticResource RedButton}" VerticalAlignment="Stretch" ToolTip="Очистить выбранные элементы" IsEnabled="{Binding Selecting, Converter={StaticResource InverseBool}}" Command="{Binding SelectDeleteCommand}">
                    <ContentControl Content="{StaticResource IconDelete}"/>
                </Button>
            </Grid>

            <Border Grid.Column="1" Margin="10 0 0 0" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Red" Visibility="{Binding Selecting, Converter={StaticResource BoolToVis}}">
                <TextBlock Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16">Выберите элемент</TextBlock>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource AnimateFlicker}"/>
                    </EventTrigger>
                </Border.Triggers>
            </Border>
        </Grid>
        <Grid DockPanel.Dock="Bottom">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="220"/>
            </Grid.ColumnDefinitions>
            <ListView Grid.ColumnSpan="3" x:Name="SelectList" ItemsSource="{Binding Item.Source.Select}" Margin="0 0 0 10">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource OrangeButton}" Width="20" Height="20" ToolTip="Удалить" Command="{Binding Source={StaticResource Proxy}, Path=Data.SelectDeleteCommand}" CommandParameter="{Binding}">
                                        <ContentControl Content="{StaticResource IconDelete}"/>
                                    </Button>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Тип" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox ItemsSource="{Binding Source={StaticResource SSTEnum}}" SelectedItem="{Binding Type}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Выбирать" Width="600">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Value}" TextWrapping="NoWrap">
                                        <TextBox.InputBindings>
                                            <KeyBinding Command="{Binding Source={StaticResource Proxy}, Path=Data.UpdateTextBoxCommand}" Key="Enter" CommandParameter="{Binding ., RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}"/>
                                        </TextBox.InputBindings>
                                    </TextBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Искать/Заменять" Width="160">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical">
                                        <TextBox Text="{Binding Filter}" ToolTip="Regex Filter" HorizontalAlignment="Stretch"/>
                                        <TextBox AcceptsReturn="true" MaxLines="2" Text="{Binding Replace}" HorizontalAlignment="Stretch" ToolTip="Шаблон вывода из найденного: {0} или {имя группы}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Padding" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <StackPanel Grid.Row="1" Orientation="Vertical">
                <CheckBox Margin="0 0 0 5" IsChecked="{Binding Item.Source.SimulateMouse}">Эмулировать движения мыши</CheckBox>
                <CheckBox Margin="0 0 0 5" IsChecked="{Binding Item.Source.CheckData}" ToolTip="Проверять HTML вместо тегов">Проверять HTML</CheckBox>
                <CheckBox Margin="0 0 0 5" IsChecked="{Binding Item.Notify}">Показывать уведомления</CheckBox>
                <CheckBox Margin="0 0 0 5" IsChecked="{Binding Item.SoundNotify}">Уведомление звуком</CheckBox>
                <CheckBox Margin="0 0 0 5" IsChecked="{Binding Item.UseProxy}">Использовать прокси</CheckBox>
            </StackPanel>
            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical">
                <Label Margin="5 0 5 0">Переходить со страницы</Label>
                <TextBox Margin="5 0 5 0" Text="{Binding Item.Source.Referer}"/>
                <Label Margin="5 0 5 0">Комментарий</Label>
                <TextBox MaxLines="3" TextWrapping="NoWrap" VerticalScrollBarVisibility="Auto" AcceptsReturn="true" Margin="5 0 5 0" Text="{Binding Item.Comment}"/>
            </StackPanel>
            <StackPanel Margin="5 0 0 0" Grid.Row="1" Grid.Column="2" Orientation="Vertical">
                <Label>Ждать загрузку</Label>
                <TextBox Text="{Binding Item.Source.WaitTimeout, Converter={StaticResource TimeSpanConverter}, ConverterParameter=&apos;0s&apos;}"></TextBox>
                
                <Label>Хранить последние данные</Label>
                <TextBox ToolTip="Хранить последние изменения в количестве шт." Text="{Binding Item.MaxCheckpoints}" local:TextBoxUtils.CheckRegexText="^[0-9]{1,2}$"></TextBox>
            </StackPanel>
        </Grid>
        <Border x:Name="BrowserBorder" BorderBrush="Silver" BorderThickness="1" Margin="0 10 0 10">
            <!--<wpf:ChromiumWebBrowser  x:Name="web" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="300"></wpf:ChromiumWebBrowser>-->
            <!--Address="{Binding Item.Source.Url}"-->
        </Border>
    </DockPanel>
</Window>